{
    "name": "Kinship and Prosocial Behaviour",
    "info": {
        "abstract": "A reanalysis of data from DeBruine (2002) Facial Resemblance Enhances Trust, PRSLB."
    },
    "authors": [
        {
            "orcid": "0000-0002-7523-5539",
            "name": {
                "surname": "DeBruine",
                "given": "Lisa M."
            },
            "roles": [
                "Conceptualization",
                "Data curation",
                "Software",
                "Writing - original draft",
                "Writing - review & editing"
            ],
            "email": "lisa.debruine@glasgow.ac.uk"
        },
        {
            "orcid": "0000-0002-0247-239X",
            "name": {
                "surname": "Lakens",
                "given": "DaniÃ«l"
            },
            "roles": [
                "Conceptualization",
                "Formal analysis",
                "Writing - original draft",
                "Writing - review & editing"
            ]
        }
    ],
    "hypotheses": [
        {
            "id": "self_pref",
            "description": "Cues of kinship will increase prosocial behaviour. Cues of kinship will be manipulated by morphed facial self-resemblance. Prosocial behaviour will be measured by responses in the trust game. The prediction is that the number of trusting AND/OR reciprocating moves will be greater to self morphs than to other morphs.",
            "criteria": [
                {
                    "id": "t_lo",
                    "analysis_id": "trust",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": true
                },
                {
                    "id": "t_hi",
                    "analysis_id": "trust",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                },
                {
                    "id": "r_lo",
                    "analysis_id": "recip",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": false
                },
                {
                    "id": "r_hi",
                    "analysis_id": "recip",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                },
                {
                    "id": "ts_norm",
                    "analysis_id": "norm",
                    "result": "ts",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "to_norm",
                    "analysis_id": "norm",
                    "result": "to",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "rs_norm",
                    "analysis_id": "norm",
                    "result": "rs",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "ro_norm",
                    "analysis_id": "norm",
                    "result": "ro",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "t_lo_w",
                    "analysis_id": "trust_wilcox",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": false
                },
                {
                    "id": "t_hi_w",
                    "analysis_id": "trust_wilcox",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                },
                {
                    "id": "r_lo_w",
                    "analysis_id": "recip_wilcox",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": false
                },
                {
                    "id": "r_hi_w",
                    "analysis_id": "recip_wilcox",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                }
            ],
            "corroboration": {
                "description": "The hypothesis is corroborated if the 97.5% CI lower bound is greater than 0 and the 97.5% CI upper bound is greater than 0.2 (the SESOI) for either the trust or reciprocation moves. Use t.test if the data are normally distributed, or Wilcox test otherwise.",
                "evaluation": "(ts_norm & to_norm & t_lo & t_hi) | \n                   (!(ts_norm & to_norm) & t_lo_w & t_hi_w) | \n                   (rs_norm & ro_norm & r_lo & r_hi) | \n                   (!(rs_norm & ro_norm) & r_lo_w & r_hi_w)",
                "result": false
            },
            "falsification": {
                "description": "The hypothesis is falsified if the 97.5% CI upper bound is smaller than 0.2 (the SESOI) for both trust and reciprocation. Use t.test if the data are normally distributed, or Wilcox test otherwise.",
                "evaluation": "( (ts_norm & to_norm & !t_hi) |\n                     (!(ts_norm & to_norm) & !t_hi_w) ) & \n                   ( (rs_norm & ro_norm & !r_hi) |\n                     (!(rs_norm & ro_norm) & !r_hi_w) )",
                "result": false
            },
            "power": {
                "corroboration": 0.53,
                "falsification": 0,
                "inconclusive": 0.47
            },
            "conclusion": "inconclusive"
        }
    ],
    "methods": [],
    "data": [
        {
            "id": "kin",
            "codebook": {
                "@context": "https://schema.org/",
                "@type": "Dataset",
                "name": "kin",
                "schemaVersion": "Psych-DS 0.1.0",
                "url": "https://osf.io/ewfhs/",
                "variableMeasured": [
                    {
                        "@type": "PropertyValue",
                        "name": "trust_self",
                        "description": "Number of trusting moves towards self-morphs",
                        "dataType": "int"
                    },
                    {
                        "@type": "PropertyValue",
                        "name": "trust_other",
                        "description": "Number of trusting moves towards self-morphs",
                        "dataType": "int"
                    },
                    {
                        "@type": "PropertyValue",
                        "name": "recip_self",
                        "description": "Number of reciprocating moves towards other-morphs",
                        "dataType": "int"
                    },
                    {
                        "@type": "PropertyValue",
                        "name": "recip_other",
                        "description": "Number of reciprocating moves towards other-morphs",
                        "dataType": "int"
                    }
                ]
            },
            "data": {
                "trust_self": [1, 2, 2, 1, 1, 1, 1, 1, 2, 0, 2, 0, 1, 2, 2, 3, 2, 2, 1, 1, 2, 0, 0, 1],
                "trust_other": [1, 2, 2, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 2, 0, 0, 0, 2, 1],
                "recip_self": [0, 1, 3, 2, 1, 1, 1, 3, 3, 2, 3, 1, 1, 2, 3, 3, 3, 1, 1, 1, 3, 0, 3, 1],
                "recip_other": [1, 1, 2, 2, 3, 2, 1, 3, 3, 1, 3, 0, 1, 3, 3, 3, 3, 0, 3, 0, 1, 0, 3, 2]
            }
        }
    ],
    "analyses": [
        {
            "id": "trust",
            "code": "t.test(kin$trust_self, kin$trust_other, paired = TRUE, conf.level = 0.975)",
            "software": "R version 4.4.0 (2024-04-24)",
            "power": {
                "statistic": [3.4388, 3.0225, 2.046, 2.626, 1.273, 2.5994, 2.7388, 0.3391, 4.549, 2.4144, 1.9511, 3.6771, 2.4383, 2.2048, 2.95, 3.0311, 2.7587, 2.5177, 3.203, 1.404, 1.2581, 2.8515, 2.2274, 0.9098, 2.1072, 2.9873, 2.4321, 1.5806, 1.4486, 3.1993, 0.7323, 2.5392, 1.4883, 2.8825, 1.0843, 3.3476, 3.1247, 3.0304, 2.4193, 1.4486, 3.6479, 2.0317, 2.3923, 1.5636, 3.4936, 0.7674, 4.6132, 1.5414, 2.1552, 1.1809, 3.0074, 1.7996, 2.811, 2.2785, 3.4348, 2.2619, 1.8951, 3.0937, 1.1429, 1.9414, 1.0602, 1.7913, 0.6719, 3.2342, 2.6982, 1.2761, 3.4526, 3.0372, 2.0233, 3.1781, 1.0199, 2.6062, 0.5807, 1.5139, 3.2496, 3.0382, 0.8852, 3.5887, 2.5708, 3.6901, 2.0877, 1.3875, 1.9576, 2.4377, 2.5046, 3.2954, 3.5224, 4.5235, 1.9, 3.1096, 4.4209, 3.7385, 0.6384, 3.0936, 1.9566, 1.1049, 1.323, 2.9688, 3.8312, 1.5228],
                "parameter": [23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23],
                "p.value": [0.0022, 0.0061, 0.0524, 0.0151, 0.2157, 0.016, 0.0117, 0.7376, 0.0001, 0.0241, 0.0633, 0.0012, 0.0229, 0.0377, 0.0072, 0.0059, 0.0112, 0.0192, 0.004, 0.1737, 0.221, 0.009, 0.036, 0.3724, 0.0462, 0.0066, 0.0232, 0.1276, 0.1609, 0.004, 0.4714, 0.0183, 0.1503, 0.0084, 0.2895, 0.0028, 0.0048, 0.0059, 0.0239, 0.161, 0.0013, 0.0539, 0.0253, 0.1316, 0.002, 0.4506, 0.0001, 0.1369, 0.0418, 0.2497, 0.0063, 0.0851, 0.0099, 0.0323, 0.0023, 0.0335, 0.0707, 0.0051, 0.2649, 0.0646, 0.3001, 0.0864, 0.5083, 0.0037, 0.0128, 0.2147, 0.0022, 0.0059, 0.0548, 0.0042, 0.3184, 0.0158, 0.5671, 0.1437, 0.0035, 0.0058, 0.3852, 0.0016, 0.0171, 0.0012, 0.0481, 0.1786, 0.0625, 0.0229, 0.0198, 0.0032, 0.0018, 0.0002, 0.07, 0.0049, 0.0002, 0.0011, 0.5295, 0.0051, 0.0626, 0.2806, 0.1988, 0.0069, 0.0009, 0.1415],
                "conf.int": [
                    [0.1717, 0.1135, -0.0548, 0.0316, -0.2351, 0.0373, 0.0544, -0.3104, 0.2657, 0.0025, -0.0792, 0.1833, 0.0052, -0.0366, 0.0584, 0.083, 0.0603, 0.0214, 0.1027, -0.1471, -0.1739, 0.0804, -0.0302, -0.2284, -0.0566, 0.0785, 0.0056, -0.1416, -0.1599, 0.1512, -0.2821, 0.022, -0.1487, 0.0739, -0.2416, 0.1477, 0.1104, 0.086, 0.0039, -0.1912, 0.1486, -0.0623, -0.001, -0.1433, 0.1543, -0.2671, 0.3143, -0.154, -0.0383, -0.2142, 0.0944, -0.0949, 0.0626, -0.0144, 0.1967, -0.0242, -0.0873, 0.1201, -0.1914, -0.0685, -0.2496, -0.0921, -0.314, 0.1332, 0.0537, -0.1636, 0.1873, 0.0997, -0.0543, 0.1344, -0.2402, 0.0211, -0.2843, -0.1063, 0.1551, 0.1126, -0.2751, 0.1389, 0.0296, 0.1858, -0.0542, -0.1455, -0.0694, 0.0067, 0.02, 0.1061, 0.1989, 0.2506, -0.0787, 0.1232, 0.2302, 0.1819, -0.2539, 0.112, -0.0663, -0.1937, -0.1791, 0.0857, 0.211, -0.1085],
                    [0.9626, 0.9853, 0.6918, 0.6959, 0.767, 0.9259, 0.8195, 0.4127, 0.8581, 0.7393, 0.7707, 0.8703, 0.6283, 0.8715, 0.5655, 0.7112, 0.8616, 0.876, 0.7148, 0.5627, 0.5579, 0.9306, 0.8191, 0.5078, 0.877, 0.7175, 0.7829, 0.6892, 0.6479, 1.0559, 0.5302, 0.7687, 0.6352, 0.8048, 0.6405, 0.8938, 0.8389, 0.7383, 0.8812, 0.7747, 0.7188, 0.7532, 0.8215, 0.6804, 0.8295, 0.5186, 0.9947, 0.7081, 0.7181, 0.6299, 0.8374, 0.6656, 0.7888, 0.5628, 1.1064, 0.8275, 0.7452, 0.9483, 0.5401, 0.6513, 0.6452, 0.6357, 0.5585, 0.8969, 0.9113, 0.5357, 1.0389, 0.8477, 0.6415, 0.9606, 0.5958, 0.5058, 0.4661, 0.4702, 1.0281, 0.9556, 0.5971, 0.6983, 0.8502, 0.8751, 0.7839, 0.5453, 0.6865, 0.8119, 0.9184, 0.6727, 1.0472, 0.8161, 0.6798, 0.9534, 0.7759, 0.8327, 0.4382, 0.8844, 0.654, 0.5248, 0.6199, 0.8054, 0.917, 0.4862]
                ],
                "estimate": [0.5671, 0.5494, 0.3185, 0.3637, 0.266, 0.4816, 0.4369, 0.0511, 0.5619, 0.3709, 0.3458, 0.5268, 0.3168, 0.4175, 0.3119, 0.3971, 0.461, 0.4487, 0.4088, 0.2078, 0.192, 0.5055, 0.3944, 0.1397, 0.4102, 0.398, 0.3942, 0.2738, 0.244, 0.6036, 0.1241, 0.3953, 0.2433, 0.4393, 0.1994, 0.5208, 0.4747, 0.4122, 0.4426, 0.2917, 0.4337, 0.3454, 0.4103, 0.2686, 0.4919, 0.1257, 0.6545, 0.277, 0.3399, 0.2078, 0.4659, 0.2853, 0.4257, 0.2742, 0.6515, 0.4017, 0.3289, 0.5342, 0.1743, 0.2914, 0.1978, 0.2718, 0.1223, 0.515, 0.4825, 0.1861, 0.6131, 0.4737, 0.2936, 0.5475, 0.1778, 0.2634, 0.0909, 0.182, 0.5916, 0.5341, 0.161, 0.4186, 0.4399, 0.5304, 0.3649, 0.1999, 0.3086, 0.4093, 0.4692, 0.3894, 0.623, 0.5334, 0.3005, 0.5383, 0.5031, 0.5073, 0.0921, 0.4982, 0.2939, 0.1655, 0.2204, 0.4456, 0.564, 0.1888],
                "null.value": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                "stderr": [0.1649, 0.1818, 0.1557, 0.1385, 0.209, 0.1853, 0.1595, 0.1508, 0.1235, 0.1536, 0.1772, 0.1433, 0.1299, 0.1893, 0.1057, 0.131, 0.1671, 0.1782, 0.1276, 0.148, 0.1526, 0.1773, 0.1771, 0.1535, 0.1947, 0.1332, 0.1621, 0.1732, 0.1685, 0.1887, 0.1694, 0.1557, 0.1634, 0.1524, 0.1839, 0.1556, 0.1519, 0.136, 0.1829, 0.2014, 0.1189, 0.17, 0.1715, 0.1718, 0.1408, 0.1638, 0.1419, 0.1797, 0.1577, 0.176, 0.1549, 0.1586, 0.1514, 0.1203, 0.1897, 0.1776, 0.1736, 0.1727, 0.1525, 0.1501, 0.1866, 0.1517, 0.1819, 0.1592, 0.1788, 0.1458, 0.1776, 0.156, 0.1451, 0.1723, 0.1743, 0.1011, 0.1565, 0.1202, 0.182, 0.1758, 0.1819, 0.1166, 0.1711, 0.1438, 0.1748, 0.1441, 0.1576, 0.1679, 0.1873, 0.1182, 0.1769, 0.1179, 0.1582, 0.1731, 0.1138, 0.1357, 0.1443, 0.161, 0.1502, 0.1498, 0.1666, 0.1501, 0.1472, 0.124],
                "alternative": [
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided"
                ],
                "method": [
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test"
                ],
                "data.name": [
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other"
                ]
            },
            "results": {
                "statistic": 2.5045,
                "parameter": 23,
                "p.value": 0.0198,
                "conf.int": [0.0213, 0.9787],
                "estimate": 0.5,
                "null.value": 0,
                "stderr": 0.1996,
                "alternative": "two.sided",
                "method": "Paired t-test",
                "data.name": "kin$trust_self and kin$trust_other"
            }
        },
        {
            "id": "recip",
            "code": "t.test(kin$recip_self, kin$recip_other, paired = TRUE, conf.level = 0.975)",
            "software": "R version 4.4.0 (2024-04-24)",
            "power": {
                "statistic": [0.1583, 0.0715, -0.8146, 1.552, -0.1262, 1.1042, -0.3177, -0.2889, 0.2111, 0.3429, 1.0986, -1.5389, 0.7431, -0.0211, 2.1671, -0.3137, -0.617, -0.3954, -0.6896, 1.049, -0.516, -0.1206, -0.7679, -0.5186, -0.6456, -0.8033, -0.0451, -0.0224, 0.2531, 0.9993, 1.6744, 0.9086, 1.0784, -1.3389, 1.3119, -0.4733, -0.5702, -0.3305, -0.1398, 0.9779, -1.9958, 0.0694, -1.2018, 0.9486, 0.6284, -1.3918, -1.507, -2.5865, -0.0424, -2.104, 0.8717, -0.183, -0.9116, 0.7896, 0.1013, 1.765, 0.9686, -2.6618, -1.7587, -1.1053, -1.0087, 0.6886, -0.9428, 0.2743, 0.1196, -0.5303, -1.5759, -0.2458, -1.5299, 0.3748, 0.3076, 0.5845, -0.4589, -1.1021, -0.1892, -0.5105, 1.6238, 0.3144, 0.0538, -1.7003, -1.0001, 0.8623, -1.8785, -0.6136, 0.7998, 2.3287, -0.4348, -0.5664, -2.6449, -2.6452, 0.3076, 2.3981, -1.7301, 1.5748, -0.1161, -1.3436, 1.3036, 0.3371, -0.0354, 0.0356],
                "parameter": [23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23],
                "p.value": [0.8756, 0.9436, 0.4237, 0.1343, 0.9007, 0.2809, 0.7536, 0.7753, 0.8347, 0.7348, 0.2833, 0.1375, 0.465, 0.9834, 0.0408, 0.7566, 0.5433, 0.6962, 0.4973, 0.3051, 0.6107, 0.9051, 0.4504, 0.609, 0.5249, 0.43, 0.9644, 0.9823, 0.8024, 0.3281, 0.1076, 0.373, 0.292, 0.1937, 0.2025, 0.6405, 0.574, 0.744, 0.89, 0.3383, 0.0579, 0.9453, 0.2417, 0.3527, 0.5359, 0.1773, 0.1454, 0.0165, 0.9665, 0.0465, 0.3924, 0.8564, 0.3714, 0.4378, 0.9202, 0.0908, 0.3428, 0.0139, 0.0919, 0.2805, 0.3236, 0.498, 0.3556, 0.7863, 0.9058, 0.601, 0.1287, 0.808, 0.1397, 0.7112, 0.7612, 0.5646, 0.6506, 0.2818, 0.8516, 0.6145, 0.118, 0.7561, 0.9576, 0.1026, 0.3277, 0.3974, 0.073, 0.5455, 0.432, 0.029, 0.6678, 0.5766, 0.0145, 0.0145, 0.7612, 0.025, 0.097, 0.1289, 0.9086, 0.1922, 0.2053, 0.7391, 0.9721, 0.9719],
                "conf.int": [
                    [-0.3695, -0.3548, -0.5634, -0.1445, -0.3268, -0.1683, -0.4106, -0.5257, -0.3615, -0.4416, -0.2017, -0.6893, -0.2276, -0.3696, -0.0393, -0.4529, -0.5278, -0.5188, -0.4615, -0.1866, -0.4586, -0.3946, -0.536, -0.4019, -0.3759, -0.4185, -0.3439, -0.4088, -0.3899, -0.2237, -0.1226, -0.202, -0.2438, -0.6416, -0.1791, -0.3227, -0.3168, -0.403, -0.3178, -0.2915, -0.8183, -0.4302, -0.675, -0.2386, -0.2365, -0.6335, -0.5874, -0.7697, -0.3954, -0.6692, -0.2432, -0.4695, -0.6604, -0.3471, -0.2656, -0.0894, -0.2976, -0.5285, -0.6227, -0.4791, -0.5603, -0.3387, -0.7294, -0.3518, -0.4131, -0.3405, -0.5921, -0.3328, -0.6021, -0.3765, -0.4039, -0.2471, -0.5451, -0.4806, -0.3509, -0.4092, -0.1116, -0.2985, -0.4783, -0.5854, -0.5211, -0.2212, -0.6752, -0.3803, -0.285, -0.0085, -0.4954, -0.3807, -0.78, -0.6266, -0.4532, 0, -0.6111, -0.1585, -0.4507, -0.5795, -0.2387, -0.331, -0.4571, -0.3601],
                    [0.4218, 0.3766, 0.2777, 0.6749, 0.2941, 0.4557, 0.3145, 0.4126, 0.4313, 0.5889, 0.5429, 0.1504, 0.432, 0.3632, 0.7776, 0.3481, 0.3118, 0.3719, 0.2554, 0.4769, 0.2962, 0.3568, 0.276, 0.259, 0.2164, 0.2085, 0.3312, 0.4012, 0.4819, 0.5433, 0.69, 0.4486, 0.6424, 0.1818, 0.6118, 0.2163, 0.1951, 0.3053, 0.2828, 0.6929, 0.0749, 0.4559, 0.2243, 0.551, 0.4044, 0.1682, 0.134, -0.0291, 0.3817, 0.0437, 0.521, 0.403, 0.2966, 0.688, 0.289, 0.588, 0.7009, -0.0276, 0.0958, 0.1768, 0.2285, 0.6116, 0.3177, 0.4428, 0.4565, 0.2172, 0.1225, 0.2709, 0.1331, 0.5161, 0.5227, 0.4064, 0.37, 0.1779, 0.2996, 0.2656, 0.5798, 0.3886, 0.5002, 0.0997, 0.2143, 0.4695, 0.082, 0.2253, 0.5702, 0.5803, 0.3433, 0.2352, -0.0382, -0.0307, 0.5866, 0.8322, 0.0989, 0.7649, 0.4091, 0.1633, 0.8075, 0.4393, 0.4438, 0.371]
                ],
                "estimate": [0.0261, 0.0109, -0.1429, 0.2652, -0.0163, 0.1437, -0.048, -0.0565, 0.0349, 0.0737, 0.1706, -0.2695, 0.1022, -0.0032, 0.3692, -0.0524, -0.108, -0.0734, -0.1031, 0.1451, -0.0812, -0.0189, -0.13, -0.0715, -0.0797, -0.105, -0.0064, -0.0038, 0.046, 0.1598, 0.2837, 0.1233, 0.1993, -0.2299, 0.2164, -0.0532, -0.0609, -0.0488, -0.0175, 0.2007, -0.3717, 0.0128, -0.2254, 0.1562, 0.084, -0.2326, -0.2267, -0.3994, -0.0069, -0.3127, 0.1389, -0.0333, -0.1819, 0.1704, 0.0117, 0.2493, 0.2016, -0.2781, -0.2635, -0.1511, -0.1659, 0.1364, -0.2058, 0.0455, 0.0217, -0.0617, -0.2348, -0.0309, -0.2345, 0.0698, 0.0594, 0.0796, -0.0876, -0.1513, -0.0257, -0.0718, 0.2341, 0.045, 0.011, -0.2429, -0.1534, 0.1242, -0.2966, -0.0775, 0.1426, 0.2859, -0.076, -0.0727, -0.4091, -0.3287, 0.0667, 0.4161, -0.2561, 0.3032, -0.0208, -0.2081, 0.2844, 0.0542, -0.0066, 0.0054],
                "null.value": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                "stderr": [0.165, 0.1525, 0.1754, 0.1709, 0.1295, 0.1301, 0.1512, 0.1957, 0.1653, 0.2149, 0.1553, 0.1751, 0.1375, 0.1528, 0.1703, 0.167, 0.1751, 0.1857, 0.1495, 0.1383, 0.1574, 0.1567, 0.1693, 0.1378, 0.1235, 0.1307, 0.1408, 0.1689, 0.1818, 0.1599, 0.1694, 0.1357, 0.1848, 0.1717, 0.1649, 0.1124, 0.1067, 0.1477, 0.1252, 0.2053, 0.1862, 0.1848, 0.1875, 0.1647, 0.1336, 0.1672, 0.1504, 0.1544, 0.162, 0.1486, 0.1594, 0.1819, 0.1995, 0.2158, 0.1157, 0.1412, 0.2082, 0.1045, 0.1498, 0.1368, 0.1645, 0.1982, 0.2183, 0.1657, 0.1813, 0.1163, 0.149, 0.1259, 0.1533, 0.1861, 0.1932, 0.1363, 0.1908, 0.1373, 0.1356, 0.1407, 0.1442, 0.1433, 0.204, 0.1429, 0.1533, 0.144, 0.1579, 0.1263, 0.1783, 0.1228, 0.1749, 0.1284, 0.1547, 0.1242, 0.2168, 0.1735, 0.148, 0.1925, 0.1793, 0.1549, 0.2182, 0.1606, 0.1879, 0.1525],
                "alternative": [
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided"
                ],
                "method": [
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test",
                    "Paired t-test"
                ],
                "data.name": [
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other"
                ]
            },
            "results": {
                "statistic": -0.2138,
                "parameter": 23,
                "p.value": 0.8326,
                "conf.int": [-0.5089, 0.4256],
                "estimate": -0.0417,
                "null.value": 0,
                "stderr": 0.1949,
                "alternative": "two.sided",
                "method": "Paired t-test",
                "data.name": "kin$recip_self and kin$recip_other"
            }
        },
        {
            "id": "norm",
            "code": [
                "{",
                "    ts <- shapiro.test(kin$trust_self)$p.value",
                "    to <- shapiro.test(kin$trust_other)$p.value",
                "    rs <- shapiro.test(kin$recip_self)$p.value",
                "    ro <- shapiro.test(kin$recip_other)$p.value",
                "}",
                "# return values",
                "list(",
                "    `ts` = ts,",
                "    `to` = to,",
                "    `rs` = rs,",
                "    `ro` = ro",
                ")"
            ],
            "software": "R version 4.4.0 (2024-04-24)",
            "power": {
                "ts": [0.3324, 0.7622, 0.8237, 0.82, 0.588, 0.7643, 0.2835, 0.8435, 0.7993, 0.5378, 0.9088, 0.7817, 0.0994, 0.5083, 0.0941, 0.3486, 0.5894, 0.0771, 0.267, 0.6956, 0.3822, 0.9383, 0.3561, 0.4371, 0.7382, 0.3222, 0.7456, 0.666, 0.1288, 0.5898, 0.0767, 0.0806, 0.3465, 0.5913, 0.3527, 0.6436, 0.5365, 0.7484, 0.3952, 0.4567, 0.3932, 0.3463, 0.3001, 0.2314, 0.0904, 0.8156, 0.4324, 0.8064, 0.857, 0.7503, 0.2027, 0.2183, 0.9022, 0.9487, 0.5375, 0.551, 0.7092, 0.8622, 0.3816, 0.8691, 0.37, 0.7331, 0.6798, 0.651, 0.9848, 0.8631, 0.7496, 0.5259, 0.7155, 0.5161, 0.5037, 0.7556, 0.0192, 0.4861, 0.7389, 0.9132, 0.7191, 0.0351, 0.7307, 0.7395, 0.3126, 0.0931, 0.4051, 0.2502, 0.6634, 0.5291, 0.3037, 0.3096, 0.234, 0.7729, 0.9491, 0.9365, 0.2859, 0.7475, 0.5218, 0.7309, 0.3473, 0.472, 0.4851, 0.6984],
                "to": [0.5222, 0.4333, 0.39, 0.6752, 0.1452, 0.9089, 0.314, 0.1469, 0.355, 0.8062, 0.8337, 0.4829, 0.135, 0.2115, 0.0569, 0.5537, 0.4601, 0.668, 0.6128, 0.5212, 0.678, 0.2363, 0.8204, 0.7744, 0.1143, 0.8455, 0.5928, 0.187, 0.5189, 0.9725, 0.0971, 0.6513, 0.0898, 0.8923, 0.2, 0.4132, 0.9952, 0.8418, 0.5057, 0.0736, 0.8393, 0.3885, 0.8868, 0.222, 0.0521, 0.8217, 0.6262, 0.1588, 0.2888, 0.5749, 0.0885, 0.0561, 0.3634, 0.9176, 0.7277, 0.3457, 0.6472, 0.0537, 0.5844, 0.9171, 0.045, 0.0198, 0.8092, 0.933, 0.4126, 0.0429, 0.4371, 0.5436, 0.4694, 0.3946, 0.3671, 0.7489, 0.5191, 0.4964, 0.1295, 0.9741, 0.4807, 0.1923, 0.5554, 0.8338, 0.2504, 0.6057, 0.3391, 0.673, 0.8639, 0.4646, 0.9699, 0.8774, 0.9337, 0.1968, 0.9897, 0.1709, 0.2316, 0.3599, 0.3419, 0.394, 0.8224, 0.6522, 0.952, 0.4454],
                "rs": [0.9151, 0.765, 0.1876, 0.9933, 0.901, 0.3084, 0.0056, 0.5305, 0.5963, 0.6944, 0.9595, 0.6785, 0.4067, 0.5972, 0.9864, 0.6913, 0.7934, 0.6692, 0.8047, 0.6848, 0.5259, 0.3221, 0.9181, 0.1996, 0.1274, 0.3016, 0.5481, 0.6412, 0.4867, 0.6902, 0.8477, 0.9231, 0.1624, 0.1408, 0.9536, 0.643, 0.6872, 0.9909, 0.8681, 0.5168, 0.569, 0.499, 0.8271, 0.7052, 0.994, 0.4949, 0.39, 0.8779, 0.6926, 0.2117, 0.3948, 0.3856, 0.568, 0.1074, 0.5127, 0.6978, 0.8837, 0.8094, 0.1869, 0.424, 0.3677, 0.9863, 0.4517, 0.5082, 0.4737, 0.9044, 0.4377, 0.5366, 0.6715, 0.6777, 0.5389, 0.8833, 0.0268, 0.4224, 0.4391, 0.0238, 0.1671, 0.8925, 0.9784, 0.4592, 0.4545, 0.0131, 0.5434, 0.3109, 0.9321, 0.6672, 0.022, 0.5785, 0.8347, 0.6335, 0.8043, 0.2233, 0.4224, 0.8001, 0.5625, 0.4859, 0.4761, 0.2337, 0.7286, 0.8387],
                "ro": [0.1178, 0.7772, 0.2714, 0.9017, 0.4903, 0.7264, 0.8922, 0.2939, 0.8625, 0.8258, 0.3855, 0.1514, 0.7627, 0.5448, 0.1851, 0.6682, 0.1225, 0.3621, 0.2015, 0.7207, 0.7801, 0.3559, 0.0799, 0.9327, 0.3627, 0.7261, 0.8685, 0.032, 0.9777, 0.2588, 0.6616, 0.1047, 0.0682, 0.9865, 0.7435, 0.3894, 0.7024, 0.5028, 0.1144, 0.3221, 0.3054, 0.9389, 0.2855, 0.7031, 0.7778, 0.984, 0.661, 0.835, 0.2897, 0.1033, 0.7968, 0.4622, 0.9801, 0.8195, 0.7051, 0.1676, 0.4272, 0.2454, 0.9688, 0.8402, 0.5225, 0.3659, 0.156, 0.9629, 0.668, 0.5054, 0.7402, 0.3556, 0.9841, 0.9775, 0.8261, 0.2352, 0.0568, 0.9312, 0.9116, 0.4203, 0.3746, 0.5103, 0.4128, 0.7144, 0.0529, 0.7137, 0.5448, 0.1151, 0.1963, 0.4557, 0.5371, 0.042, 0.2473, 0.7253, 0.3222, 0.916, 0.9765, 0.5784, 0.2338, 0.1457, 0.1427, 0.0478, 0.0399, 0.3614]
            },
            "results": {
                "ts": 0.0039,
                "to": 0.0002,
                "rs": 0.0004,
                "ro": 0.0006
            }
        },
        {
            "id": "trust_wilcox",
            "code": [
                "wilcox.test(kin$trust_self, kin$trust_other, paired = TRUE, conf.level = 0.975, ",
                "    conf.int = TRUE)"
            ],
            "software": "R version 4.4.0 (2024-04-24)",
            "power": {
                "statistic": [248, 239, 204, 233, 186, 233, 234, 165, 269, 236, 226, 259, 225, 226, 244, 231, 238, 226, 247, 208, 195, 239, 209, 186, 213, 244, 222, 198, 197, 245, 169, 220, 194, 234, 183, 251, 239, 243, 232, 194, 256, 213, 229, 202, 253, 176, 272, 205, 217, 196, 243, 216, 234, 219, 250, 230, 204, 244, 190, 209, 176, 210, 180, 250, 235, 194, 251, 244, 218, 249, 176, 233, 168, 207, 243, 238, 181, 251, 229, 256, 211, 189, 211, 228, 225, 244, 252, 266, 212, 243, 271, 255, 172, 241, 216, 184, 210, 238, 263, 202],
                "parameter": [
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {}
                ],
                "p.value": [0.0039, 0.0096, 0.128, 0.0164, 0.3165, 0.0164, 0.015, 0.684, 0.0003, 0.0126, 0.0291, 0.0011, 0.0315, 0.0291, 0.0059, 0.0194, 0.0105, 0.0291, 0.0043, 0.1011, 0.2076, 0.0096, 0.0951, 0.3165, 0.0738, 0.0059, 0.0395, 0.178, 0.1875, 0.0053, 0.6033, 0.0457, 0.2182, 0.015, 0.3596, 0.0028, 0.0096, 0.0065, 0.0179, 0.2182, 0.0016, 0.0738, 0.0229, 0.1434, 0.0022, 0.4732, 0.0002, 0.1208, 0.0564, 0.1974, 0.0065, 0.0604, 0.015, 0.0491, 0.0031, 0.0211, 0.128, 0.0059, 0.2643, 0.0951, 0.4732, 0.0894, 0.4061, 0.0031, 0.0138, 0.2182, 0.0028, 0.0059, 0.0526, 0.0035, 0.4732, 0.0164, 0.6231, 0.1074, 0.0065, 0.0105, 0.3902, 0.0028, 0.0229, 0.0016, 0.0839, 0.2768, 0.0839, 0.0249, 0.0315, 0.0059, 0.0025, 0.0004, 0.0787, 0.0065, 0.0002, 0.0018, 0.5457, 0.0079, 0.0604, 0.3449, 0.0894, 0.0105, 0.0006, 0.1434],
                "null.value": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                "alternative": [
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided"
                ],
                "method": [
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test"
                ],
                "data.name": [
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other",
                    "kin$trust_self and kin$trust_other"
                ],
                "conf.int": [
                    [0.1482, 0.0708, -0.0859, 0.0334, -0.3074, 0.0345, 0.0281, -0.32, 0.2687, 0.0418, -0.0312, 0.1593, -0.0175, -0.0356, 0.0512, 0.0216, 0.0427, -0.0017, 0.081, -0.1175, -0.1666, 0.1239, -0.0944, -0.2441, -0.118, 0.0613, -0.0223, -0.1575, -0.1609, 0.2162, -0.2884, -0.0407, -0.1544, 0.0388, -0.2108, 0.1191, 0.0622, 0.0879, 0.0648, -0.2334, 0.1279, -0.0905, 0.0134, -0.2137, 0.1462, -0.3198, 0.2915, -0.1414, -0.0346, -0.1756, 0.0854, -0.101, 0.0367, -0.0084, 0.1707, 0.0485, -0.1037, 0.089, -0.2143, -0.0588, -0.2817, -0.1008, -0.3077, 0.1526, 0.0688, -0.1863, 0.1721, 0.0663, -0.0628, 0.1613, -0.3053, 0.0107, -0.2946, -0.0852, 0.1127, 0.0482, -0.2859, 0.0983, 0.0187, 0.2162, -0.0741, -0.1826, -0.0946, 0.0086, -0.0137, 0.1121, 0.1651, 0.275, -0.066, 0.0909, 0.235, 0.168, -0.2717, 0.095, -0.0775, -0.2257, -0.0861, 0.0783, 0.156, -0.132],
                    [0.9922, 0.9955, 0.6799, 0.7306, 0.7742, 0.9036, 0.8357, 0.3768, 0.8741, 0.7287, 0.7476, 0.8379, 0.6362, 0.893, 0.5346, 0.6924, 0.8898, 0.8405, 0.7304, 0.5819, 0.5992, 0.9428, 0.8227, 0.539, 0.8634, 0.7335, 0.8015, 0.6862, 0.7003, 1.1931, 0.5626, 0.7671, 0.6136, 0.7926, 0.4132, 0.8803, 0.8734, 0.7605, 0.9271, 0.8136, 0.7441, 0.7602, 0.845, 0.7033, 0.7989, 0.5277, 0.9964, 0.7026, 0.7535, 0.64, 0.8713, 0.7073, 0.8002, 0.5639, 1.1646, 0.7963, 0.7285, 0.9758, 0.5814, 0.6852, 0.6497, 0.6689, 0.5879, 0.8981, 0.9695, 0.5529, 1.0878, 0.8661, 0.6323, 0.9127, 0.5887, 0.5053, 0.4445, 0.4672, 1.0348, 0.9883, 0.5685, 0.7102, 0.8636, 0.9124, 0.7716, 0.5356, 0.6772, 0.8561, 0.9038, 0.6848, 1.0644, 0.8385, 0.7338, 0.9894, 0.7659, 0.8416, 0.454, 0.892, 0.7013, 0.5625, 0.6371, 0.8205, 0.9223, 0.5233]
                ],
                "estimate": [0.5326, 0.6163, 0.2087, 0.394, 0.2328, 0.4491, 0.4421, 0.0436, 0.5775, 0.4034, 0.4081, 0.5503, 0.3058, 0.4695, 0.2821, 0.3548, 0.5027, 0.3823, 0.3955, 0.2608, 0.1945, 0.5852, 0.3389, 0.1465, 0.3935, 0.3926, 0.3743, 0.2203, 0.2625, 0.5874, 0.0983, 0.3866, 0.2218, 0.3955, 0.1168, 0.5358, 0.4581, 0.4396, 0.4842, 0.2451, 0.4477, 0.3559, 0.4018, 0.2712, 0.4649, 0.1318, 0.6372, 0.2792, 0.3664, 0.2623, 0.5021, 0.3318, 0.4152, 0.2794, 0.6742, 0.4105, 0.3684, 0.5274, 0.2179, 0.2557, 0.1523, 0.2798, 0.1461, 0.5706, 0.4892, 0.2116, 0.6749, 0.4438, 0.2835, 0.4978, 0.149, 0.2687, 0.0704, 0.1733, 0.5995, 0.5519, 0.157, 0.3911, 0.4266, 0.5587, 0.3296, 0.1696, 0.315, 0.4314, 0.3887, 0.4089, 0.6503, 0.5681, 0.3543, 0.5071, 0.4854, 0.4894, 0.0795, 0.4777, 0.3441, 0.1896, 0.2718, 0.4831, 0.4818, 0.214]
            },
            "results": {
                "statistic": 86.5,
                "parameter": {},
                "p.value": 0.0259,
                "null.value": 0,
                "alternative": "two.sided",
                "method": "Wilcoxon signed rank test with continuity correction",
                "data.name": "kin$trust_self and kin$trust_other",
                "conf.int": [-0, 1.5001],
                "estimate": 1
            }
        },
        {
            "id": "recip_wilcox",
            "code": [
                "wilcox.test(kin$recip_self, kin$recip_other, paired = TRUE, conf.level = 0.975, ",
                "    conf.int = TRUE)"
            ],
            "software": "R version 4.4.0 (2024-04-24)",
            "power": {
                "statistic": [152, 155, 135, 202, 161, 188, 138, 146, 152, 160, 209, 114, 176, 146, 222, 147, 124, 141, 133, 189, 126, 140, 120, 122, 136, 121, 162, 150, 160, 170, 213, 175, 186, 111, 179, 137, 125, 154, 148, 183, 89, 153, 98, 178, 164, 103, 93, 65, 146, 80, 173, 141, 113, 178, 142, 206, 198, 70, 83, 110, 100, 178, 115, 150, 163, 136, 101, 149, 84, 150, 166, 164, 124, 112, 133, 127, 200, 161, 160, 88, 119, 174, 80, 126, 179, 226, 121, 136, 76, 62, 150, 218, 95, 201, 127, 123, 200, 176, 145, 148],
                "parameter": [
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {},
                    {}
                ],
                "p.value": [0.9664, 0.8996, 0.684, 0.1434, 0.7683, 0.2897, 0.7469, 0.9218, 0.9664, 0.7898, 0.0951, 0.3165, 0.4732, 0.9218, 0.0395, 0.9441, 0.4732, 0.8115, 0.6431, 0.2768, 0.5088, 0.7898, 0.4061, 0.4389, 0.7048, 0.4223, 0.7469, 1, 0.7898, 0.5838, 0.0738, 0.4908, 0.3165, 0.2768, 0.4223, 0.7257, 0.4908, 0.9218, 0.9664, 0.3596, 0.0839, 0.9441, 0.1434, 0.4389, 0.7048, 0.1875, 0.1074, 0.0138, 0.9218, 0.0457, 0.5271, 0.8115, 0.3029, 0.4389, 0.8334, 0.114, 0.178, 0.0211, 0.0564, 0.2643, 0.16, 0.4389, 0.3305, 1, 0.7257, 0.7048, 0.1688, 0.9888, 0.0604, 1, 0.6634, 0.7048, 0.4732, 0.2897, 0.6431, 0.5271, 0.16, 0.7683, 0.7898, 0.0787, 0.3902, 0.5088, 0.0457, 0.5088, 0.4223, 0.0291, 0.4223, 0.7048, 0.034, 0.0105, 1, 0.0526, 0.1208, 0.1515, 0.5271, 0.4559, 0.16, 0.4732, 0.8996, 0.9664],
                "null.value": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                "alternative": [
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided",
                    "two.sided"
                ],
                "method": [
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test",
                    "Wilcoxon signed rank exact test"
                ],
                "data.name": [
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other",
                    "kin$recip_self and kin$recip_other"
                ],
                "conf.int": [
                    [-0.4364, -0.3611, -0.5772, -0.1512, -0.3537, -0.1795, -0.4153, -0.5001, -0.3581, -0.5204, -0.1066, -0.6572, -0.2846, -0.3847, -0.0225, -0.4624, -0.5276, -0.5454, -0.4946, -0.1915, -0.4985, -0.411, -0.5704, -0.3644, -0.3888, -0.4501, -0.3306, -0.4515, -0.3682, -0.2565, -0.1426, -0.1929, -0.2619, -0.5681, -0.2261, -0.3323, -0.3147, -0.3712, -0.351, -0.3131, -0.7777, -0.4972, -0.7022, -0.1918, -0.268, -0.6538, -0.6234, -0.8041, -0.4161, -0.6387, -0.2594, -0.4665, -0.7298, -0.4113, -0.2805, -0.1174, -0.3034, -0.5646, -0.652, -0.4845, -0.5807, -0.3035, -0.7957, -0.3352, -0.4132, -0.3504, -0.616, -0.3456, -0.6094, -0.4046, -0.3991, -0.2828, -0.5234, -0.5252, -0.3158, -0.4458, -0.126, -0.3548, -0.4804, -0.611, -0.5473, -0.2122, -0.6909, -0.3586, -0.3107, -0.0036, -0.5557, -0.3574, -0.7821, -0.6523, -0.5689, -0.0425, -0.6369, -0.1516, -0.4778, -0.5408, -0.2052, -0.3405, -0.4387, -0.3932],
                    [0.4325, 0.4176, 0.3466, 0.7068, 0.3601, 0.5041, 0.3359, 0.4473, 0.4408, 0.6239, 0.5387, 0.2284, 0.4333, 0.3866, 0.7625, 0.4143, 0.3234, 0.4056, 0.237, 0.4873, 0.2831, 0.3274, 0.2836, 0.2739, 0.2592, 0.2087, 0.3285, 0.4229, 0.5005, 0.5901, 0.6694, 0.4473, 0.6657, 0.194, 0.6138, 0.2296, 0.1956, 0.2968, 0.3174, 0.7652, 0.0952, 0.4322, 0.2149, 0.5089, 0.4043, 0.1962, 0.1605, -0.0174, 0.4416, 0.0264, 0.5326, 0.4388, 0.3226, 0.6719, 0.2388, 0.5993, 0.7073, -0.0241, 0.0615, 0.1715, 0.217, 0.6583, 0.3299, 0.3566, 0.487, 0.2398, 0.1603, 0.307, 0.0789, 0.4508, 0.599, 0.4088, 0.341, 0.1889, 0.2917, 0.2668, 0.5884, 0.3988, 0.5431, 0.1016, 0.2129, 0.4808, 0.0849, 0.2321, 0.6209, 0.5879, 0.2939, 0.2249, 0.0312, -0.0607, 0.5757, 0.8526, 0.095, 0.7924, 0.3744, 0.1678, 0.8825, 0.4738, 0.4772, 0.3349]
                ],
                "estimate": [0.0179, 0.0225, -0.1317, 0.2915, 0.023, 0.1193, -0.0476, -0.0218, 0.0095, 0.061, 0.2321, -0.2378, 0.1111, -0.0255, 0.3678, -0.0254, -0.1148, -0.0685, -0.0998, 0.1383, -0.1193, -0.0502, -0.1545, -0.1299, -0.0593, -0.1079, 0.0703, -0.001, 0.0868, 0.0778, 0.3655, 0.1041, 0.2334, -0.1726, 0.1657, -0.0542, -0.0679, 0.0107, -0.0061, 0.1568, -0.3079, 0.0438, -0.3047, 0.165, 0.0559, -0.2802, -0.2492, -0.4373, -0.0282, -0.3128, 0.0897, -0.057, -0.2371, 0.1381, -0.0308, 0.2088, 0.3083, -0.2747, -0.274, -0.1966, -0.3087, 0.1514, -0.2292, -0.0003, 0.0661, -0.0607, -0.2326, -0.0087, -0.2807, -0.0044, 0.0874, 0.0506, -0.1507, -0.1725, -0.0479, -0.0988, 0.2181, 0.0485, 0.0555, -0.2406, -0.1691, 0.0966, -0.348, -0.097, 0.1905, 0.2732, -0.1157, -0.0564, -0.3726, -0.3787, 0.0007, 0.424, -0.2682, 0.3157, -0.1045, -0.0904, 0.3104, 0.1066, -0.0465, -0.0149]
            },
            "results": {
                "statistic": 36,
                "parameter": {},
                "p.value": 0.8366,
                "null.value": 0,
                "alternative": "two.sided",
                "method": "Wilcoxon signed rank test with continuity correction",
                "data.name": "kin$recip_self and kin$recip_other",
                "conf.int": [-1.5, 1],
                "estimate": -0
            }
        }
    ]
}

